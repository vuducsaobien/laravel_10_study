/*
// 1. Độ phức tạp: O(1) — Nhanh nhất, truy cập trực tiếp
isset($array[$key]);                : Kiểm tra key tồn tại và khác null
array_key_exists($key, $arr);       : Kiểm tra key tồn tại
$array[$key];                       : Truy cập giá trị theo key
count($array);                      : Đếm số phần tử (PHP 7+ cực nhanh)
is_array($var);                     : Kiểm tra kiểu dữ liệu
is_string($var);                    : Kiểm tra kiểu dữ liệu
intdiv(int $num1, int $num2): int   : Chia lấy phần nguyên
strval(mixed $value): string        : Get string value of a variable
strrev(string $string): string      : Reverse a string  

// 2. Độ phức tạp: O(n) — Duyệt qua toàn bộ phần tử
in_array($needle, $array);          : Tìm kiếm tuần tự
array_search($needle, $array);      : Tìm kiếm và trả về key
array_keys($array);                 : Lấy danh sách key
array_values($array);               : Lấy danh sách value
array_merge($a, $b);                : Gộp 2 mảng
json_encode($data);                 : Mã hóa JSON
json_decode($json);                 : Giải mã JSON
explode(',', $string);              : Cắt chuỗi thành mảng
implode(',', $array);               : Nối mảng thành chuỗi
str_split($string);                 : Cắt chuỗi thành mảng

// 3. Độ phức tạp: O(n log n) — Thường là sắp xếp
sort($array);                   // Sắp xếp giá trị
asort($array);                  // Sắp xếp giữ key
ksort($array);                  // Sắp xếp theo key

// 4. Độ phức tạp: O(n * m) — Chậm với mảng lớn
array_diff($a, $b);             // Hiệu 2 mảng
array_intersect($a, $b);        // Giao 2 mảng

// 5. Độ phức tạp: Tùy thuộc nội dung
preg_match($pattern, $str);     // Phụ thuộc pattern regex
file_get_contents($url);        // I/O: chậm nếu file lớn hoặc mạng chậm
*/
